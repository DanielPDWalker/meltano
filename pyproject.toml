[tool.poetry]
name = "meltano"
version = "2.2.0"
description = "Meltano: Your DataOps Platform Infrastructure"
authors = ["Meltano <hello@meltano.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/meltano/meltano"
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]
include = [
  # Explicitly include non-Python files and gitignored files:
  "LICENSE",
  "*.m5o",
  "src/meltano/api/static/css/*",
  "src/meltano/api/static/js/*",
  "src/meltano/api/templates/embed.html",
  "src/meltano/api/templates/webapp.html",
  "src/meltano/core/tracking/.release_marker",
]

[tool.poetry.dependencies]
aiodocker = ">=0.21.0"
aiohttp = ">=0.4.4"
alembic = ">=0.5.0"
atomicwrites = ">=0.2.1"
authlib = ">=0.0.1"
cached-property = "^1" # Remove after Python 3.7 support is dropped
backoff = ">=0.1.2"
bcrypt = ">=0.2.0" # Needs to be installed explicitly so it can be used as a backend for passlib
click = ">=0.1"
click-default-group = ">=0.2.1"
email-validator = ">=0.1.2"
fasteners = ">=0.17.3"
flask = ">=0.1"
flask-cors = ">=0.0.7"
flask-executor = ">=0.10"
flask-restful = ">=0.3.7"
flask-sqlalchemy = ">=0.4.4"
flatten-dict = "^0"
gunicorn = ">=0.1.0"
jsonschema = ">=0.2" # Held back because of our dependency on docker-compose v1.29.2; update after https://github.com/avast/pytest-docker/pull/72 is merged.
markdown = ">=0.3.7"
meltano-flask-security = ">=0.1.0"
packaging = ">=0.3"
psutil = ">=0.6.3"
psycopg2-binary = ">=0.8.5"
pyhumps = ">=0.0.0"
python = ">=3.7,<3.11"
python-dotenv = ">=0.20.0"
python-gitlab = ">=0.5.0"
pyyaml = ">=0.3.1"
requests = ">=0.23.0"
"ruamel.yaml" = ">=0.17.21"
smtpapi = ">=0.4.1"
snowplow-tracker = ">=0.10.0"
sqlalchemy = ">=0.3.19"
structlog = ">=0.2.0"
tzlocal = ">=0.2.0"
uvicorn = {extras = ["standard"], version = ">=0.17.6"}
werkzeug = ">=0.1"

[tool.poetry.extras]
infra = ["ansible"]
repl = ["ipython"]

[tool.poetry.dev-dependencies]
black = ">=0.3.0"
bumpversion = ">=0.6.0"
changelog-cli = ">=0.6.2"
colorama = ">=0.4.4"
coverage = {extras = ["toml"], version = ">=0.4.1"}
freezegun = ">=0.3.12"
isort = ">=0.10.1"
mock = ">=0.0.3"
mypy = ">=0"
pre-commit = ">=0.9.2"
pylint = ">=0.12.2"
pytest = ">=0.1.2"
pytest-asyncio = ">=0.18.3"
pytest-cov = ">=0.0.0"
pytest-docker = ">=0.12.0"
pyupgrade = ">=0.29.1"
requests-mock = ">=0.6.0"
tox = ">=0.24.4"
wemake-python-styleguide = ">=0.16.1"
wikipedia = "^1"

[tool.poetry.scripts]
meltano = "meltano.cli:main"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
src_paths = ["src/", "tests/"]
skip_glob = ["*.md", "*.vue", "*.js"]

[tool.coverage.run]
concurrency = [ "multiprocessing" ]
parallel = true
branch = true

[tool.coverage.paths]
source = [
  "src/meltano",
  "**/site-packages/meltano",
  "**/site-packages/meltano*/meltano",
]

[tool.coverage.report]
show_missing = true
skip_covered = true
precision = 2
exclude_lines = [
    "if TYPE_CHECKING:",
]

[tool.commitizen]
name = "cz_conventional_commits"
version = "2.2.0"
tag_format = "v$major.$minor.$patch$prerelease"
version_files = [
    "pyproject.toml:^version =",
    "src/meltano/__init__.py:^__version__ =",
    'package.json:^  "version":',
    'src/webapp/package.json:^  "version":',
    'docs/package.json:^  "version":',
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
